import"./style.7f2dd081.js";import{i as S,S as R,e as B,O as G,W,B as I,C as b,c as M,P as O,A as j,d as k,g as q}from"./vendor.00e16764.js";const i=new S({width:350}),P=document.querySelector("canvas.webgl"),u=new R,e={count:1e5,particleSize:.01,radius:5,branches:5,spinAngle:1,randomness:.02,randomPower:3,insideColor:"#ff6030",outsideColor:"#1b3984"};let r=null,g=null,d=null;const n=()=>{r!=null&&(r.dispose(),g.dispose(),u.remove(d)),r=new I;const a=new Float32Array(e.count*3),c=new Float32Array(e.count*3),F=new b(e.insideColor),v=new b(e.outsideColor);for(let h=0;h<e.count;h++){const s=h*3,m=Math.random()*e.radius,p=m*e.spinAngle,C=h%e.branches/e.branches*Math.PI*2,z=Math.pow(Math.random(),e.randomPower)*(Math.random()<.5?1:-1),x=Math.pow(Math.random(),e.randomPower)*(Math.random()<.5?1:-1)/2,y=Math.pow(Math.random(),e.randomPower)*(Math.random()<.5?1:-1);a[s]=Math.cos(C+p)*m+z,a[s+1]=x/2,a[s+2]=Math.sin(C+p)*m+y;const w=F.clone();w.lerp(v,m/e.radius),c[s]=w.r,c[s+1]=w.g,c[s+2]=w.b}r.setAttribute("position",new M(a,3)),r.setAttribute("color",new M(c,3)),g=new O({size:e.particleSize,sizeAttenuation:!0,depthWrite:!1,blending:j,vertexColors:!0}),d=new k(r,g),u.add(d)};n();i.add(e,"count",100,1e6,100).onFinishChange(n).name("Number of Particles");i.add(e,"particleSize",.001,.1,.001).onFinishChange(n).name("Size of particles");i.add(e,"radius",.01,20,.01).onFinishChange(n).name("Galaxy Radius");i.add(e,"branches",2,20,1).onFinishChange(n).name("Number of Branches");i.add(e,"spinAngle",-5,5,.01).onFinishChange(n).name("Branch Spin Angle");i.add(e,"randomness",0,2,.01).onFinishChange(n).name("Randomness");i.add(e,"randomPower",1,10,.01).onFinishChange(n).name("Power of Randomness");i.addColor(e,"insideColor").onFinishChange(n).name("Inside Color");i.addColor(e,"outsideColor").onFinishChange(n).name("Outside Color");const o={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{o.width=window.innerWidth,o.height=window.innerHeight,t.aspect=o.width/o.height,t.updateProjectionMatrix(),l.setSize(o.width,o.height),l.setPixelRatio(Math.min(window.devicePixelRatio,2))});const t=new B(75,o.width/o.height,.1,100);t.position.x=3;t.position.y=3;t.position.z=3;u.add(t);const f=new G(t,P);f.enableDamping=!0;const l=new W({canvas:P});l.setSize(o.width,o.height);l.setPixelRatio(Math.min(window.devicePixelRatio,2));const E=new q,A=()=>{const a=E.getElapsedTime();d!=null&&(d.rotation.y=a/e.branches*-e.spinAngle/e.radius),f.update(),l.render(u,t),window.requestAnimationFrame(A)};A();
